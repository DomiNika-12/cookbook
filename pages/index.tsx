import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { Filter } from '@/components/filter'
import { Recipe } from '@/components/recipe'
import { ReactMarkdown } from 'react-markdown/lib/react-markdown'
import { Dispatch, SetStateAction, createContext, useContext, useState } from 'react'

interface RecipeData {
  title: string,
  filters: string[]
}
export const RecipeList: RecipeData[] = [
  {
    title: 'barszcz',
    filters: ['swieta']
  },
  {
    title: 'pierogi',
    filters: ['swieta']
  },
  {
    title: 'sernik',
    filters: ['deser']
  },
  {
    title: 'skubaniec',
    filters: ['deser']
  },
  {
    title: 'krupnik',
    filters: ['obiad', 'zupa']
  },
  {
    title: 'ogorkowa',
    filters: ['obiad', 'zupa']
  },
  {
    title: 'pomidorowa',
    filters: ['obiad', 'zupa']
  },
  {
    title: 'rosol',
    filters: ['obiad', 'zupa']
  },
]

export type globalContextType = {
  deser: boolean,
  setDeser: Dispatch<SetStateAction<boolean>>,
  mieso: boolean,
  setMieso: Dispatch<SetStateAction<boolean>>,
  ryba: boolean,
  setRyba: Dispatch<SetStateAction<boolean>>,
  sniadanie: boolean,
  setSniadanie: Dispatch<SetStateAction<boolean>>,
  kolacja: boolean,
  setKolacja: Dispatch<SetStateAction<boolean>>,
  obiad: boolean,
  setObiad: Dispatch<SetStateAction<boolean>>,
  wielkanoc: boolean,
  setWielkanoc: Dispatch<SetStateAction<boolean>>,
  swieta: boolean,
  setSwieta: Dispatch<SetStateAction<boolean>>
}
export const globalContext = createContext<globalContextType>({} as globalContextType);
export const useGlobalContext = () => useContext(globalContext)

export default function Home() {
  const [deser, setDeser] = useState(false)
  const [mieso, setMieso] = useState(false)
  const [ryba, setRyba] = useState(false)
  const [sniadanie, setSniadanie] = useState(false)
  const [kolacja, setKolacja] = useState(false)
  const [obiad, setObiad] = useState(false)
  const [wielkanoc, setWielkanoc] = useState(false)
  const [swieta, setSwieta] = useState(false)

  return (
    <globalContext.Provider value={{
      deser, setDeser,
      mieso, setMieso,
      ryba, setRyba,
      sniadanie, setSniadanie,
      kolacja, setKolacja,
      obiad, setObiad,
      wielkanoc, setWielkanoc,
      swieta, setSwieta
    }}>
      <Head>
        <title>KsiÄ…zka Kucharska</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Filter />
        <ul className={styles.recipesContainer}>
          {RecipeList.map((e, i) => {
            if (!deser && !mieso && !ryba && !sniadanie && !kolacja && !obiad && !wielkanoc && !swieta)
              return (
                <Recipe title={e.title} key={i}></Recipe>
              )
            else if (deser && e.filters.includes('deser') ||
              mieso && e.filters.includes('mieso') ||
              ryba && e.filters.includes('ryba') ||
              sniadanie && e.filters.includes('sniadanie') ||
              kolacja && e.filters.includes('kolacja') ||
              obiad && e.filters.includes('obiad') ||
              wielkanoc && e.filters.includes('wielkanoc') ||
              swieta && e.filters.includes('swieta')
            ) {
              return (
                <Recipe title={e.title} key={i}></Recipe>
              )
            }
          })}
        </ul>
      </main>
    </globalContext.Provider>
  )
}
